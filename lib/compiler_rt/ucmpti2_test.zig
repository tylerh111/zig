const cmp = @import("cmp.zig");
const testing = @import("std").testing;

fn test__ucmpti2(a: u128, b: u128, expected: i32) !void {
    const result = cmp.__ucmpti2(a, b);
    try testing.expect_equal(expected, result);
}

test "ucmpti2" {
    // min_int == 0
    // max_int == 340282366920938463463374607431768211455
    // min_int/2 == 0
    // max_int/2 == 170141183460469231731687303715884105727
    // 1. equality min_int, min_int+1, max_int/2, max_int-1, max_int
    try test__ucmpti2(0, 0, 1);
    try test__ucmpti2(1, 1, 1);
    try test__ucmpti2(170141183460469231731687303715884105727, 170141183460469231731687303715884105727, 1);
    try test__ucmpti2(340282366920938463463374607431768211454, 340282366920938463463374607431768211454, 1);
    try test__ucmpti2(340282366920938463463374607431768211455, 340282366920938463463374607431768211455, 1);
    // 2. cmp min_int,   {min_int + 1, max_int/2, max_int-1, max_int}
    try test__ucmpti2(0, 1, 0);
    try test__ucmpti2(0, 170141183460469231731687303715884105727, 0);
    try test__ucmpti2(0, 340282366920938463463374607431768211454, 0);
    try test__ucmpti2(0, 340282366920938463463374607431768211455, 0);
    // 3. cmp min_int+1, {min_int, max_int/2, max_int-1, max_int}
    try test__ucmpti2(1, 0, 2);
    try test__ucmpti2(1, 170141183460469231731687303715884105727, 0);
    try test__ucmpti2(1, 340282366920938463463374607431768211454, 0);
    try test__ucmpti2(1, 340282366920938463463374607431768211455, 0);
    // 4. cmp min_int/2, {}
    // 5. cmp -1,       {}
    // 6. cmp 0,        {}
    // 7. cmp 1,        {}
    // 8. cmp max_int/2, {}
    try test__ucmpti2(170141183460469231731687303715884105727, 0, 2);
    try test__ucmpti2(170141183460469231731687303715884105727, 1, 2);
    try test__ucmpti2(170141183460469231731687303715884105727, 340282366920938463463374607431768211454, 0);
    try test__ucmpti2(170141183460469231731687303715884105727, 340282366920938463463374607431768211455, 0);
    // 9. cmp max_int-1, {min_int, min_int + 1,  max_int/2, max_int}
    try test__ucmpti2(340282366920938463463374607431768211454, 0, 2);
    try test__ucmpti2(340282366920938463463374607431768211454, 1, 2);
    try test__ucmpti2(340282366920938463463374607431768211454, 170141183460469231731687303715884105727, 2);
    try test__ucmpti2(340282366920938463463374607431768211454, 340282366920938463463374607431768211455, 0);
    // 10.cmp max_int,   {min_int, min_int + 1, min_int/2, -2,-1,0,1,2, max_int/2, max_int-1,       }
    try test__ucmpti2(340282366920938463463374607431768211455, 0, 2);
    try test__ucmpti2(340282366920938463463374607431768211455, 1, 2);
    try test__ucmpti2(340282366920938463463374607431768211455, 170141183460469231731687303715884105727, 2);
    try test__ucmpti2(340282366920938463463374607431768211455, 340282366920938463463374607431768211454, 2);
}
